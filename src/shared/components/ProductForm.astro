---
import { alertMessage } from "@Utils/functions.js";
import { sendData, updateData } from "@Services/api.js";

const { product, isEditing } = Astro.props;

if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
		const productData = {
			name: data.get("name"),
			description: String(data.get("description")),
			price: parseFloat(String(data.get("price"))),
			category: String(data.get("category")),
		};

		if (isEditing) {
			await updateData(`products/${product.id}`, productData);
		} else {
			await sendData("products", productData);
		}

		alertMessage({
			icon: "success",
			title: isEditing ? "Product Updated" : "Product Created",
			text: `The product has been successfully ${isEditing ? "updated" : "created"}.`,
		});

		// Redirect to product list or view page
		return Astro.redirect("/products");
	} catch (error) {
		alertMessage({
			icon: "error",
			title: "Error",
			text: `Failed to ${isEditing ? "update" : "create"} the product. Please try again.`,
		});
	}
}
---

<form method="POST" class="max-w-md mx-auto">
	<div class="mb-4">
		<label for="name" class="block mb-2 font-bold">Product Name</label>
		<input
			type="text"
			id="name"
			name="name"
			required
			class="w-full px-3 py-2 border rounded-md"
			value={product?.name || ""}
		/>
	</div>

	<div class="mb-4">
		<label for="description" class="block mb-2 font-bold">Description</label
		>
		<textarea
			id="description"
			name="description"
			rows="3"
			class="w-full px-3 py-2 border rounded-md"
			>{product?.description || ""}</textarea
		>
	</div>

	<div class="mb-4">
		<label for="price" class="block mb-2 font-bold">Price</label>
		<input
			type="number"
			id="price"
			name="price"
			step="0.01"
			required
			class="w-full px-3 py-2 border rounded-md"
			value={product?.price || ""}
		/>
	</div>

	<div class="mb-4">
		<label for="category" class="block mb-2 font-bold">Category</label>
		<select
			id="category"
			name="category"
			required
			class="w-full px-3 py-2 border rounded-md"
		>
			<option value="">Select a category</option>
			<option
				value="electronics"
				selected={product?.category === "electronics"}
				>Electronics</option
			>
			<option value="clothing" selected={product?.category === "clothing"}
				>Clothing</option
			>
			<option value="books" selected={product?.category === "books"}
				>Books</option
			>
			<option value="home" selected={product?.category === "home"}
				>Home & Garden</option
			>
		</select>
	</div>

	<button
		type="submit"
		class="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600"
	>
		{isEditing ? "Update Product" : "Create Product"}
	</button>
</form>

<script>
	import { alertMessage } from "@Utils/functions.js";

	document.querySelector("form").addEventListener("submit", async (e) => {
		e.preventDefault();
		const form = e.target;
		const formData = new FormData(form);

		try {
			const response = await fetch(form.action, {
				method: form.method,
				body: formData,
			});

			if (response.ok) {
				const result = await response.json();
				alertMessage({
					icon: "success",
					title: "Success",
					text: result.message,
				});
				// Redirect or update UI as needed
			} else {
				throw new Error("Failed to submit form");
			}
		} catch (error) {
			alertMessage({
				icon: "error",
				title: "Error",
				text: "Failed to submit form. Please try again.",
			});
		}
	});
</script>
